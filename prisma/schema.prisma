// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customers {
  id         String      @id @default(uuid())
  pseudo     String
  lastname   String
  firstname  String
  birthdate  String
  avatar     String
  email      String      @unique
  password   String
  role       String
  favorites  Favorites[]
  comments   Comments[]
  diets      String
  newsletter Boolean
  reset_password Reset_password?
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Reset_password {
  id String @id @default( uuid() )
  customer Customers @relation( fields: [customer_id], references: [id])
  customer_id String @unique
  create_at DateTime @default( now() )
}

model Recipes {
  id                  String                @id @default(uuid())
  name                String                @unique
  description         String
  score               Int
  duration            Int
  difficulty          Int
  image               String
  numberOfPerson      Int
  isValidate          Boolean               @default(false)
  celebrations_id     String[]
  country_id          String[]
  dishes_id           String[]
  calories_total      Int
  celebrations        String          
  country             String               
  dishes              String                
  Favorites           Favorites[]
  Comments            Comments[]
  Newsletters_details Newsletters_details[]
  Process             Process[]
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Favorites {
  id          String    @id @default(uuid())
  customer_id String
  recipe_id   String
  customer    Customers @relation(fields: [customer_id], references: [id])
  recipe      Recipes   @relation(fields: [recipe_id], references: [id])
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Comments {
  id          String    @id @default(uuid())
  comment     String
  level       Int
  parent_id   Int
  date        DateTime  @default(now())
  customer_id String
  recipe_id   String
  customer    Customers @relation(fields: [customer_id], references: [id])
  recipe      Recipes   @relation(fields: [recipe_id], references: [id])
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Newsletters {
  id                  String                @id @default(uuid())
  title               String
  content             String
  newsletter_details  String[]
  date                DateTime              @default(now())
  Newsletters_details Newsletters_details[]
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Newsletters_details {
  id            String      @id @default(uuid())
  newsletter_id String
  recipe_id     String
  newsletter    Newsletters @relation(fields: [newsletter_id], references: [id])
  recipe        Recipes     @relation(fields: [recipe_id], references: [id])
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Process {
  id        String  @id @default(uuid())
  recipe_id String
  steps     String
  recipe    Recipes @relation(fields: [recipe_id], references: [id])
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Celebrations {
  id      String    @id @default(uuid())
  name    String
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Country {
  id      String    @id @default(uuid())
  name    String
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Dishes {
  id      String    @id @default(uuid())
  name    String
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Aliments {
  id                 String               @id @default(uuid())
  name               String
  category           String
  type               String
  measure_id         String
  image              String
  measure            String
  measuresId         String
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Measures {
  id       String     @id @default(uuid())
  unities  String
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}

model Ingredients_recipe {
  id         String   @id @default(uuid())
  recipe_id  String
  aliment_id String
  quantity   Int
  aliment    String
  updated_at DateTime @updatedAt
  create_at DateTime @default( now() )
}
